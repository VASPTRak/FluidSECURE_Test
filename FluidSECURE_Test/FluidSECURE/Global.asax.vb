Imports System.Web.Http
Imports System.Web.Optimization

Public Class Global_asax
    Inherits HttpApplication

    Sub Application_Start(sender As Object, e As EventArgs)
        Try

            ' Fires when the application is started
            RouteConfig.RegisterRoutes(RouteTable.Routes)
            BundleConfig.RegisterBundles(BundleTable.Bundles)
            WebApiConfig.Register(GlobalConfiguration.Configuration)
            RoleActions.AddUserRoles() 'Add roles in to database.
            If (ConfigurationManager.AppSettings("AllowActivityLogin").ToString().ToLower() = "yes") Then
                CSCommonHelper.WriteLog("Application Start", "", "", "", "", "", "success", "")
            End If
        Catch
        End Try
	    End Sub


    Sub Session_End(sender As Object, e As EventArgs)
        Try

            If (ConfigurationManager.AppSettings("AllowActivityLogin").ToString().ToLower() = "yes") Then
                CSCommonHelper.WriteLog("log Off", "login", "", "", Session("PersonName").ToString() & "(" & Session("PersonEmail").ToString() & ")", Session("IPAddress").ToString(), "success", "")
            End If

        Catch
        End Try

    End Sub

    Sub Application_End(sender As Object, e As EventArgs)
        Try

            If (ConfigurationManager.AppSettings("AllowActivityLogin").ToString().ToLower() = "yes") Then
                CSCommonHelper.WriteLog("Application Shutdown", "", "", "", "", "", "success", "")
            End If

        Catch
        End Try

    End Sub

    Sub Application_Error(ByVal sender As Object, ByVal e As EventArgs)

        Try

            ' Code that runs when an unhandled error occurs

            ' Get the exception object.
            Dim exc As Exception = Server.GetLastError
            'Exception exception = Server.GetLastError().GetBaseException();
            ' Handle HTTP errors (avoid trapping HttpUnhandledException
            ' which is generated when a non-HTTP exception 
            ' such as the ones generated by buttons 1-3 in 
            ' Default.aspx is not handled at the page level).
            If (exc.GetType Is GetType(HttpException)) Then
                ' The Complete Error Handling Example generates
                ' some errors using URLs with "NoCatch" in them;
                ' ignore these here to simulate what would happen
                ' if a global.asax handler were not implemented.
                If exc.Message.Contains("NoCatch") Or exc.Message.Contains("maxUrlLength") Then
                    Return
                End If

                'Redirect HTTP errors to HttpError page
                'Server.Transfer("HttpErrorPage.aspx")
            End If
            Dim log As log4net.ILog = log4net.LogManager.GetLogger(GetType(Global_asax))
            log4net.Config.XmlConfigurator.Configure()

            log.Error("Unhandled exception occured. StackTrace Exception is : " & exc.StackTrace)

            log.Error("Unhandled exception occured. Source Exception is : " & exc.Source)

            log.Error("Unhandled exception occured. TargetSite Exception is : " & exc.TargetSite.Name)

            If (exc.InnerException Is Nothing) Then
                log.Info("in InnerException")
                If (Not exc.Message Is Nothing) Then
                    log.Info("in Message")
                    log.Error("Unhandled exception occured. Message Exception is : " & exc.Message.ToString)
                Else
                    log.Error("Unhandled exception occured. Message and InnerException not found.")
                End If
            Else
                log.Info("Not in InnerException")
                log.Error("Unhandled exception occured. InnerException is : " & exc.InnerException.ToString())
            End If

        Catch ex As Exception
            Dim log As log4net.ILog = log4net.LogManager.GetLogger(GetType(Global_asax))
            log4net.Config.XmlConfigurator.Configure()
            log.Error("Exception occured in  Application_Error. Exception is : " & ex.Message)
        End Try

        'Try

        '    ' Code that runs when an unhandled error occurs

        '    ' Get the exception object.
        '    Dim exc As Exception = Server.GetLastError

        '    ' Handle HTTP errors (avoid trapping HttpUnhandledException
        '    ' which is generated when a non-HTTP exception 
        '    ' such as the ones generated by buttons 1-3 in 
        '    ' Default.aspx is not handled at the page level).
        '    If (exc.GetType Is GetType(HttpException)) Then
        '        ' The Complete Error Handling Example generates
        '        ' some errors using URLs with "NoCatch" in them;
        '        ' ignore these here to simulate what would happen
        '        ' if a global.asax handler were not implemented.
        '        If exc.Message.Contains("NoCatch") Or exc.Message.Contains("maxUrlLength") Then
        '            Return
        '        End If

        '        'Redirect HTTP errors to HttpError page
        '        'Server.Transfer("HttpErrorPage.aspx")
        '    End If
        '    Dim log As log4net.ILog = log4net.LogManager.GetLogger(GetType(Global_asax))
        '    log4net.Config.XmlConfigurator.Configure()

        '    log.Error("Unhandled exception occured. StackTrace Exception is : " & exc.StackTrace)

        '    log.Error("Unhandled exception occured. Source Exception is : " & exc.Source)

        '    log.Error("Unhandled exception occured. TargetSite Exception is : " & exc.TargetSite.Name)

        '    If (Not exc.InnerException Is Nothing) Then
        '        log.Error("Unhandled exception occured. Message Exception is : " & exc.Message.ToString)
        '    Else
        '        log.Error("Unhandled exception occured. InnerException is : " & exc.InnerException.ToString())
        '    End If

        'Catch ex As Exception
        '    Dim log As log4net.ILog = log4net.LogManager.GetLogger(GetType(Global_asax))
        '    log4net.Config.XmlConfigurator.Configure()
        '    log.Error("Exception occured in  Application_Error. Exception is : " & ex.Message)
        'End Try
    End Sub
End Class